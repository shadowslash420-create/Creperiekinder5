@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 0 0% 10%;

  --border: 0 0% 93%;

  --card: 0 0% 100%;

  --card-foreground: 0 0% 10%;

  --card-border: 0 0% 95%;

  --sidebar: 240 4% 96%;

  --sidebar-foreground: 240 10% 4%;

  --sidebar-border: 240 6% 86%;

  --sidebar-primary: 0 85% 55%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 240 5% 92%;

  --sidebar-accent-foreground: 240 10% 4%;

  --sidebar-ring: 0 85% 55%;

  --popover: 0 0% 96%;

  --popover-foreground: 240 10% 4%;

  --popover-border: 240 6% 84%;

  --primary: 0 85% 55%;

  --primary-foreground: 0 0% 100%;

  --secondary: 0 0% 96%;

  --secondary-foreground: 0 0% 10%;

  --muted: 0 0% 97%;

  --muted-foreground: 0 0% 45%;

  --accent: 0 85% 98%;

  --accent-foreground: 0 85% 40%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 100%;

  --input: 240 6% 80%;
  --ring: 0 85% 55%;
  --chart-1: 0 85% 55%;
  --chart-2: 160 84% 39%;
  --chart-3: 215 85% 55%;
  --chart-4: 280 80% 60%;
  --chart-5: 30 95% 55%;

  --font-sans: Inter, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: "JetBrains Mono", Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(240 6% 10% / 0.02);
  --shadow-xs: 0px 1px 2px 0px hsl(240 6% 10% / 0.05);
  --shadow-sm: 0px 1px 3px 0px hsl(240 6% 10% / 0.05), 0px 1px 2px -1px hsl(240 6% 10% / 0.05);
  --shadow: 0px 2px 4px -1px hsl(240 6% 10% / 0.06), 0px 4px 6px -1px hsl(240 6% 10% / 0.06);
  --shadow-md: 0px 4px 6px -1px hsl(240 6% 10% / 0.08), 0px 2px 4px -2px hsl(240 6% 10% / 0.08);
  --shadow-lg: 0px 10px 15px -3px hsl(240 6% 10% / 0.08), 0px 4px 6px -4px hsl(240 6% 10% / 0.08);
  --shadow-xl: 0px 20px 25px -5px hsl(240 6% 10% / 0.08), 0px 8px 10px -6px hsl(240 6% 10% / 0.08);
  --shadow-2xl: 0px 25px 50px -12px hsl(240 6% 10% / 0.15);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 240 10% 4%;

  --foreground: 0 0% 98%;

  --border: 240 4% 16%;

  --card: 240 8% 8%;

  --card-foreground: 0 0% 98%;

  --card-border: 240 4% 18%;

  --sidebar: 240 8% 10%;

  --sidebar-foreground: 0 0% 98%;

  --sidebar-border: 240 4% 20%;

  --sidebar-primary: 0 85% 60%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 240 6% 14%;

  --sidebar-accent-foreground: 0 0% 98%;

  --sidebar-ring: 0 85% 60%;

  --popover: 240 8% 12%;

  --popover-foreground: 0 0% 98%;

  --popover-border: 240 4% 22%;

  --primary: 0 85% 60%;

  --primary-foreground: 0 0% 100%;

  --secondary: 240 6% 16%;

  --secondary-foreground: 0 0% 98%;

  --muted: 240 6% 14%;

  --muted-foreground: 240 5% 65%;

  --accent: 240 6% 12%;

  --accent-foreground: 0 0% 98%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 100%;

  --input: 240 4% 26%;
  --ring: 0 85% 60%;
  --chart-1: 0 85% 60%;
  --chart-2: 160 84% 45%;
  --chart-3: 215 85% 60%;
  --chart-4: 280 80% 65%;
  --chart-5: 30 95% 60%;

  --shadow-2xs: 0px 1px 2px 0px hsl(240 10% 0% / 0.20);
  --shadow-xs: 0px 1px 2px 0px hsl(240 10% 0% / 0.30);
  --shadow-sm: 0px 1px 3px 0px hsl(240 10% 0% / 0.30), 0px 1px 2px -1px hsl(240 10% 0% / 0.30);
  --shadow: 0px 2px 4px -1px hsl(240 10% 0% / 0.35), 0px 4px 6px -1px hsl(240 10% 0% / 0.35);
  --shadow-md: 0px 4px 6px -1px hsl(240 10% 0% / 0.40), 0px 2px 4px -2px hsl(240 10% 0% / 0.40);
  --shadow-lg: 0px 10px 15px -3px hsl(240 10% 0% / 0.40), 0px 4px 6px -4px hsl(240 10% 0% / 0.40);
  --shadow-xl: 0px 20px 25px -5px hsl(240 10% 0% / 0.40), 0px 8px 10px -6px hsl(240 10% 0% / 0.40);
  --shadow-2xl: 0px 25px 50px -12px hsl(240 10% 0% / 0.50);

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(5deg);
  }
}

@keyframes float-slow {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-30px) rotate(-5deg);
  }
}

@keyframes shimmer {
  0% {
    background-position: -1000px 0;
  }
  100% {
    background-position: 1000px 0;
  }
}

.crepe-float {
  animation: float 6s ease-in-out infinite;
}

.crepe-float-slow {
  animation: float-slow 8s ease-in-out infinite;
}

.shimmer-effect {
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(220, 38, 38, 0.1) 50%,
    transparent 100%
  );
  background-size: 1000px 100%;
  animation: shimmer 3s infinite;
}

.luxury-gradient {
  background: linear-gradient(135deg, hsl(var(--primary) / 0.1) 0%, transparent 50%);
}

.golden-glow {
  box-shadow: 
    0 0 20px rgba(220, 38, 38, 0.3),
    0 0 40px rgba(220, 38, 38, 0.15);
}

@layer base {
  body {
    font-feature-settings: "kern" 1, "liga" 1, "calt" 1;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-serif);
    letter-spacing: -0.02em;
  }
}

.animated-crepe-bg {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
}

.crepe-circle {
  position: absolute;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(220, 38, 38, 0.15) 0%, transparent 70%);
  filter: blur(40px);
}

.crepe-circle-1 {
  width: 300px;
  height: 300px;
  top: 10%;
  left: 10%;
  animation: float 10s ease-in-out infinite;
}

.crepe-circle-2 {
  width: 400px;
  height: 400px;
  top: 40%;
  right: 10%;
  animation: float-slow 12s ease-in-out infinite;
  animation-delay: -2s;
}

.crepe-circle-3 {
  width: 250px;
  height: 250px;
  bottom: 20%;
  left: 30%;
  animation: float 15s ease-in-out infinite;
  animation-delay: -5s;
}

.kinder-wave-decoration {
  position: relative;
  overflow: hidden;
}

.kinder-wave-decoration::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 40%;
  background: hsl(0 85% 55%);
  clip-path: ellipse(100% 100% at 50% 100%);
  z-index: 0;
}

.kinder-wave-decoration::after {
  content: 'MENU';
  position: absolute;
  font-size: 10rem;
  font-weight: 700;
  color: rgba(220, 38, 38, 0.05);
  z-index: 0;
  pointer-events: none;
  user-select: none;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.red-wave-bg {
  position: relative;
  background: linear-gradient(to bottom, 
    hsl(0 0% 100%) 0%, 
    hsl(0 0% 100%) 60%,
    hsl(0 85% 55%) 60%,
    hsl(0 85% 55%) 100%
  );
  clip-path: polygon(
    0 0,
    100% 0,
    100% 60%,
    100% 100%,
    0 100%,
    0 70%,
    0 0
  );
}

.wave-section {
  position: relative;
}

.wave-section::before {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 200px;
  background: hsl(0 85% 55%);
  clip-path: ellipse(150% 100% at 50% 100%);
  z-index: -1;
}

.menu-watermark {
  position: absolute;
  font-size: clamp(4rem, 15vw, 12rem);
  font-weight: 700;
  color: rgba(220, 38, 38, 0.03);
  z-index: 0;
  pointer-events: none;
  user-select: none;
  white-space: nowrap;
}

@keyframes scroll-left {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

.marquee-container {
  overflow: hidden;
  position: relative;
  width: 100%;
  background: transparent;
  padding: 0.75rem 0;
}

.marquee-content {
  display: flex;
  animation: scroll-left 20s linear infinite;
  white-space: nowrap;
}

.marquee-item {
  display: inline-block;
  padding: 0 2rem;
  font-size: 1rem;
  font-weight: 500;
  color: white;
  letter-spacing: 0.05em;
}

.smooth-transitions {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.logo-transition {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.logo-transition:hover {
  transform: scale(1.05) rotate(2deg);
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}

@keyframes rotate-smooth {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.rotate-smooth {
  animation: rotate-smooth 20s linear infinite;
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(220, 38, 38, 0.3), 0 0 40px rgba(220, 38, 38, 0.15);
  }
  50% {
    box-shadow: 0 0 30px rgba(220, 38, 38, 0.5), 0 0 60px rgba(220, 38, 38, 0.25);
  }
}

.pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
}